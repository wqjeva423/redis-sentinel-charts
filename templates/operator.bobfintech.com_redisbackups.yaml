
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: redisbackups.operator.bobfintech.com
spec:
  group: operator.bobfintech.com
  names:
    kind: RedisBackup
    listKind: RedisBackupList
    plural: redisbackups
    singular: redisbackup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RedisBackup is the Schema for the redisbackups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisBackupSpec defines the desired state of RedisBackup
            properties:
              backupSchedule:
                type: string
              backupSecretName:
                type: string
              backupURL:
                type: string
              clusterName:
                type: string
              expireDays:
                type: string
            type: object
          status:
            description: RedisBackupStatus defines the observed state of RedisBackup
            properties:
              conditions:
                description: Conditions represents the backup resource conditions
                  list.
                items:
                  description: BackupCondition defines condition struct for backup
                    resource
                  properties:
                    backupEndTime:
                      type: string
                    backupStartTime:
                      type: string
                    filePath:
                      description: "// type of cluster condition, values in (\\\"Ready\\\")
                        Type BackupConditionType `json:\"type\"` // Status of the
                        condition, one of (\\\"True\\\", \\\"False\\\", \\\"Unknown\\\")
                        Status corev1.ConditionStatus `json:\"status\"` \n // LastTransitionTime
                        LastTransitionTime metav1.Time `json:\"lastTransitionTime\"`
                        // Reason Reason string `json:\"reason\"` // Message Message
                        string `json:\"message\"`"
                      type: string
                    fileSize:
                      type: string
                    jobName:
                      type: string
                    message:
                      type: string
                    objectName:
                      type: string
                    podName:
                      type: string
                    status:
                      type: string
                  required:
                  - backupEndTime
                  - backupStartTime
                  - filePath
                  - fileSize
                  - jobName
                  - message
                  - objectName
                  - podName
                  - status
                  type: object
                type: array
              jobStatus:
                items:
                  properties:
                    Completed:
                      default: false
                      type: boolean
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
